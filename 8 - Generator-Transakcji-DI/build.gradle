plugins {
    id "java"
    id "groovy"
    id "maven-publish"
    id "jacoco"
}

group 'serialization'
version '1.0-SNAPSHOT'



sourceCompatibility = 1.8

jacoco{
    toolVersion = "0.8.0"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

repositories {
    mavenCentral()
}

jar {
    manifest {
        attributes(
                "Manifest-Version": "1.0",
                "Main-Class": "Generator"
        )
    }
}

task fatJar(type: Jar) {
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    manifest {
        attributes 'Main-Class': 'Generator.Generator'
    }
}

task runFatJar(type: JavaExec) {
    dependsOn fatJar
    classpath = fatJar.outputs.files
    main = 'Generator.Generator'
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    compile "org.projectlombok:lombok:1.16.18"
    //logback
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'ch.qos.logback:logback-core:1.2.3'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.springframework:spring-context:5.0.4.RELEASE'
    compile group: 'xstream', name: 'xstream', version: '1.2.2'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.2'


    testCompile(
            //JUnit
            'junit:junit:4.12',
            //Rich asserting: AssertJ
            'org.assertj:assertj-core:3.9.0',

            //Mocks: Mockito
            'org.mockito:mockito-core:2.8.9',
    )
}

test {
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}
